const about__text = document.querySelectorAll(".about__text"); if (setTimeout(function () { about__text.forEach(b => { b.style.display = "block" }) }, 500), document.getElementById("about-toggle").checked = !1, -1 != navigator.userAgent.indexOf("Edge")) document.getElementById("background").addEventListener("animationstart", () => { setTimeout(() => { document.getElementById("background").style.backgroundImage = "url('../img/1.jpg')" }, 950) }); else { function b() { let c = document.getElementById("footer").offsetHeight; p.width = d.scrollWidth, p.height = d.scrollHeight - c, setTimeout(function () { p.width = d.scrollWidth, p.height = d.scrollHeight - c, i = p.height }, 250); const a = document.getElementById("projects-container"); a.classList.add("notransition"), document.getElementById("projects-toggle").checked = !1, a.offsetHeight, a.classList.remove("notransition"), g() } const p = document.getElementById("canvas"), c = p.getContext("2d"), d = document.getElementById("body"); p.width = d.scrollWidth, p.height = d.scrollHeight; let q, e = { x: null, y: null, radius: 100 }; window.addEventListener("mousemove", b => { e.x = b.pageX, e.y = b.pageY }); class f { constructor(g, a, b, c, d, e) { this.x = g, this.y = a, this.directionX = 0, this.directionY = c, this.size = d, this.color = e } draw() { c.beginPath(), c.arc(this.x, this.y, this.size, 0, 2 * Math.PI, !1), c.fillStyle = "#121212", c.fill() } update() { (this.x > p.width || 0 > this.x) && (this.directionX = -this.directionX), (this.y > p.height || 0 > this.y) && (this.directionY = -this.directionY), this.y > p.height + 15 && (this.y = 0, this.directionY = Math.abs(this.directionY)); let c = e.x - this.x, a = e.y - this.y, b = Math.sqrt(c * c + a * a); b < e.radius + this.size && (e.x < this.x && this.x < p.width - 10 * this.size && (this.x += 10, this.directionX = -this.directionX), e.x > this.x && this.x > 10 * this.size && (this.x -= 10, this.directionX = -this.directionX), e.y < this.y && this.y < p.height - 10 * this.size && (this.y += 10, this.directionY = -this.directionY), e.y > this.y && this.y > 10 * this.size && (this.y -= 10, this.directionY = -this.directionY)), this.x += this.directionX, this.y += this.directionY, this.draw() } } const g = () => { q = []; let c = .5 * (p.height * p.width / 9e3); 50 > c && (c = 60); for (let a = 0; a < c; a++) { let g = 1 * Math.random() + 1, a = Math.random() * (innerWidth - 2 * g - 2 * g) + 2 * g, b = Math.random() * (innerHeight - 2 * g - 2 * g) + 2 * g, c = 5 * Math.random() - 2.5, d = 5 * Math.random() - 2.5; q.push(new f(a, b, c, d, g, "#121212")) } }, a = () => { let b = 1; for (let d = 0; d < q.length; d++)for (let e, a = d; a < q.length; a++)e = (q[d].x - q[a].x) * (q[d].x - q[a].x) + (q[d].y - q[a].y) * (q[d].y - q[a].y), e < p.width / 9 * (p.height / 9) && (b = 1 - e / 2e4, c.strokeStyle = "rgba(18,18,18," + b + ")", c.lineWidth = 1, c.beginPath(), c.moveTo(q[d].x, q[d].y), c.lineTo(q[a].x, q[a].y), c.stroke()) }, h = () => { requestAnimationFrame(h), c.clearRect(0, 0, d.scrollWidth, d.scrollHeight); for (let b = 0; b < q.length; b++)q[b].update(); a() }; window.addEventListener("mouseout", () => { e.x = void 0, e.y = void 0 }), g(), h(); let i = p.height, j = 0; window.addEventListener("touchstart", () => { j = 1 }); let k = 0; window.addEventListener("orientationchange", () => { k = 1 }), window.addEventListener("resize", () => { 0 === j && 0 === k ? b() : (0 == j && 1 == k || 1 == j && 1 == k) && (k = 0, b()) }); const l = () => { p.height === i && setTimeout(function () { p.height = d.scrollHeight }, 600), p.height > i && (p.height = i, setTimeout(function () { p.height = d.scrollHeight }, 600)) }; document.getElementById("projects-toggle").addEventListener("input", l) }